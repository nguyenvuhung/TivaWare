<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\rvmdk\qs-rgb.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\rvmdk\qs-rgb.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Sun May 22 01:46:31 2016
<BR><P>
<H3>Maximum Stack Usage =        152 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
CMD_help &rArr; UARTprintf &rArr; UARTvprintf &rArr; UARTwrite &rArr; UARTPrimeTransmit
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[c]">Reset_Handler</a>
 <LI><a href="#[1]">NmiSR</a>
 <LI><a href="#[2]">FaultISR</a>
 <LI><a href="#[3]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[10]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">SysCtlDelay</a><BR>
 <LI><a href="#[1]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NmiSR</a><BR>
 <LI><a href="#[2]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">FaultISR</a><BR>
 <LI><a href="#[3]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[7]">CMD_help</a> from rgb_commands.o(i.CMD_help) referenced from rgb_commands.o(.data)
 <LI><a href="#[8]">CMD_hib</a> from rgb_commands.o(i.CMD_hib) referenced from rgb_commands.o(.data)
 <LI><a href="#[a]">CMD_intensity</a> from rgb_commands.o(i.CMD_intensity) referenced from rgb_commands.o(.data)
 <LI><a href="#[9]">CMD_rand</a> from rgb_commands.o(i.CMD_rand) referenced from rgb_commands.o(.data)
 <LI><a href="#[b]">CMD_rgb</a> from rgb_commands.o(i.CMD_rgb) referenced from rgb_commands.o(.data)
 <LI><a href="#[2]">FaultISR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[3]">IntDefaultHandler</a> from startup_rvmdk.o(RESET) referenced 112 times from startup_rvmdk.o(RESET)
 <LI><a href="#[1]">NmiSR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[c]">Reset_Handler</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[4]">SysTickIntHandler</a> from qs-rgb.o(i.SysTickIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[5]">UARTStdioIntHandler</a> from uartstdio_1.o(i.UARTStdioIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[6]">main</a> from qs-rgb.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[c]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[d]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[49]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[11]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4a]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[4b]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[4c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[4d]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[4e]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[10]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppHibernateEnter
</UL>

<P><STRONG><a name="[4f]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[50]"></a>CPUprimask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[29]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[51]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[52]"></a>CPUbasepriSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[53]"></a>CPUbasepriGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[24]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdLineProcess
</UL>

<P><STRONG><a name="[54]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[55]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>AppButtonHandler</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, qs-rgb.o(i.AppButtonHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AppButtonHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntHandler
</UL>

<P><STRONG><a name="[12]"></a>AppHibernateEnter</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, qs-rgb.o(i.AppHibernateEnter))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = AppHibernateEnter &rArr; UARTprintf &rArr; UARTvprintf &rArr; UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBEnable
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBDisable
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HibernateWakeSet
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HibernateRequest
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HibernateRTCSet
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HibernateRTCMatchSet
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HibernateRTCEnable
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HibernateGPIORetentionEnable
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HibernateDataSet
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_hib
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>AppRainbow</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, qs-rgb.o(i.AppRainbow))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = AppRainbow &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBColorSet
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntHandler
</UL>

<P><STRONG><a name="[45]"></a>ButtonsInit</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, buttons.o(i.ButtonsInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ButtonsInit
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2b]"></a>ButtonsPoll</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, buttons.o(i.ButtonsPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ButtonsPoll
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntHandler
</UL>

<P><STRONG><a name="[7]"></a>CMD_help</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, rgb_commands.o(i.CMD_help))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = CMD_help &rArr; UARTprintf &rArr; UARTvprintf &rArr; UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rgb_commands.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>CMD_hib</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rgb_commands.o(i.CMD_hib))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = CMD_hib &rArr; AppHibernateEnter &rArr; UARTprintf &rArr; UARTvprintf &rArr; UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppHibernateEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rgb_commands.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>CMD_intensity</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, rgb_commands.o(i.CMD_intensity))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CMD_intensity &rArr; RGBIntensitySet &rArr; RGBColorSet
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBIntensitySet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rgb_commands.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>CMD_rand</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rgb_commands.o(i.CMD_rand))
<BR>[Address Reference Count : 1]<UL><LI> rgb_commands.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>CMD_rgb</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, rgb_commands.o(i.CMD_rgb))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CMD_rgb &rArr; RGBColorSet
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrtoul
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBColorSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rgb_commands.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>CmdLineProcess</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, cmdline_1.o(i.CmdLineProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CmdLineProcess &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[25]"></a>ConfigureUART</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, qs-rgb.o(i.ConfigureUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ConfigureUART &rArr; UARTStdioConfig &rArr; UARTFlushTx
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioConfig
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTClockSourceSet
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[43]"></a>HibernateDataGet</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, hibernate.o(i.HibernateDataGet))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19]"></a>HibernateDataSet</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, hibernate.o(i.HibernateDataSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HibernateDataSet
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppHibernateEnter
</UL>

<P><STRONG><a name="[44]"></a>HibernateEnableExpClk</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hibernate.o(i.HibernateEnableExpClk))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14]"></a>HibernateGPIORetentionEnable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hibernate.o(i.HibernateGPIORetentionEnable))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppHibernateEnter
</UL>

<P><STRONG><a name="[42]"></a>HibernateIntClear</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hibernate.o(i.HibernateIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[41]"></a>HibernateIntStatus</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hibernate.o(i.HibernateIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>HibernateIsActive</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hibernate.o(i.HibernateIsActive))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16]"></a>HibernateRTCEnable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hibernate.o(i.HibernateRTCEnable))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppHibernateEnter
</UL>

<P><STRONG><a name="[17]"></a>HibernateRTCMatchSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hibernate.o(i.HibernateRTCMatchSet))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppHibernateEnter
</UL>

<P><STRONG><a name="[15]"></a>HibernateRTCSet</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, hibernate.o(i.HibernateRTCSet))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppHibernateEnter
</UL>

<P><STRONG><a name="[1d]"></a>HibernateRequest</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hibernate.o(i.HibernateRequest))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppHibernateEnter
</UL>

<P><STRONG><a name="[18]"></a>HibernateWakeSet</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, hibernate.o(i.HibernateWakeSet))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppHibernateEnter
</UL>

<P><STRONG><a name="[28]"></a>IntMasterEnable</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20]"></a>RGBColorSet</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, rgb.o(i.RGBColorSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RGBColorSet
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_rgb
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBIntensitySet
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRainbow
</UL>

<P><STRONG><a name="[1a]"></a>RGBDisable</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, rgb.o(i.RGBDisable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RGBDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppHibernateEnter
</UL>

<P><STRONG><a name="[1c]"></a>RGBEnable</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, rgb.o(i.RGBEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RGBEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBInit
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppHibernateEnter
</UL>

<P><STRONG><a name="[2a]"></a>RGBInit</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, rgb.o(i.RGBInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RGBInit &rArr; RGBEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22]"></a>RGBIntensitySet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rgb.o(i.RGBIntensitySet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RGBIntensitySet &rArr; RGBColorSet
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBColorSet
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_intensity
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b]"></a>SysCtlClockGet</STRONG> (Thumb, 314 bytes, Stack size 12 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppHibernateEnter
</UL>

<P><STRONG><a name="[3d]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>SysCtlResetCauseClear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlResetCauseClear))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>SysCtlResetCauseGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlResetCauseGet))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>SysTickEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickEnable))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>SysTickIntEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>SysTickIntHandler</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, qs-rgb.o(i.SysTickIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SysTickIntHandler &rArr; AppRainbow &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRainbow
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppButtonHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonsPoll
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SysTickPeriodSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(i.SysTickPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>UARTClockSourceSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uart.o(i.UARTClockSourceSet))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigureUART
</UL>

<P><STRONG><a name="[32]"></a>UARTFlushRx</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, uartstdio_1.o(i.UARTFlushRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UARTFlushRx
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioConfig
</UL>

<P><STRONG><a name="[2d]"></a>UARTFlushTx</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, uartstdio_1.o(i.UARTFlushTx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UARTFlushTx
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioConfig
</UL>

<P><STRONG><a name="[2f]"></a>UARTPeek</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, uartstdio_1.o(i.UARTPeek))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTPeek
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBufferCount
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[27]"></a>UARTStdioConfig</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, uartstdio_1.o(i.UARTStdioConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UARTStdioConfig &rArr; UARTFlushTx
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushTx
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushRx
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigureUART
</UL>

<P><STRONG><a name="[5]"></a>UARTStdioIntHandler</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, uartstdio_1.o(i.UARTStdioIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UARTStdioIntHandler &rArr; UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPrimeTransmit
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferFull
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferEmpty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>UARTgets</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, uartstdio_1.o(i.UARTgets))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTgets
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13]"></a>UARTprintf</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, uartstdio_1.o(i.UARTprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = UARTprintf &rArr; UARTvprintf &rArr; UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTvprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_help
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppHibernateEnter
</UL>

<P><STRONG><a name="[36]"></a>UARTvprintf</STRONG> (Thumb, 420 bytes, Stack size 56 bytes, uartstdio_1.o(i.UARTvprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = UARTvprintf &rArr; UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>

<P><STRONG><a name="[33]"></a>UARTwrite</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, uartstdio_1.o(i.UARTwrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPrimeTransmit
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferFull
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTvprintf
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioIntHandler
</UL>

<P><STRONG><a name="[38]"></a>__ARM_fpclassifyf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fpclassifyf.o(i.__ARM_fpclassifyf))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[1f]"></a>__hardfp_sinf</STRONG> (Thumb, 344 bytes, Stack size 16 bytes, sinf.o(i.__hardfp_sinf))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRainbow
</UL>

<P><STRONG><a name="[3c]"></a>__mathlib_flt_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[3b]"></a>__mathlib_flt_invalid</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_invalid))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[39]"></a>__mathlib_flt_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_underflow))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[37]"></a>__mathlib_rredf2</STRONG> (Thumb, 316 bytes, Stack size 20 bytes, rredf.o(i.__mathlib_rredf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __mathlib_rredf2
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[56]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[57]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[58]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[3a]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[6]"></a>main</STRONG> (Thumb, 344 bytes, Stack size 8 bytes, qs-rgb.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = main &rArr; AppHibernateEnter &rArr; UARTprintf &rArr; UARTvprintf &rArr; UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgets
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPeek
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickPeriodSet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntEnable
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickEnable
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlResetCauseGet
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlResetCauseClear
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBIntensitySet
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBInit
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBEnable
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HibernateIsActive
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HibernateIntStatus
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HibernateIntClear
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HibernateEnableExpClk
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HibernateDataGet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdLineProcess
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigureUART
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRainbow
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppHibernateEnter
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonsInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[21]"></a>ustrtoul</STRONG> (Thumb, 158 bytes, Stack size 20 bytes, ustdlib_1.o(i.ustrtoul))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ustrtoul
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_rgb
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_intensity
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>GetBufferCount</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uartstdio_1.o(i.GetBufferCount))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPeek
</UL>

<P><STRONG><a name="[2e]"></a>IsBufferEmpty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uartstdio_1.o(i.IsBufferEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushTx
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPrimeTransmit
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioIntHandler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgets
</UL>

<P><STRONG><a name="[34]"></a>IsBufferFull</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, uartstdio_1.o(i.IsBufferFull))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioIntHandler
</UL>

<P><STRONG><a name="[31]"></a>UARTPrimeTransmit</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, uartstdio_1.o(i.UARTPrimeTransmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioIntHandler
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
